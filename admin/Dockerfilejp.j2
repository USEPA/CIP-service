FROM ghcr.io/osgeo/gdal:ubuntu-full-3.10.3

LABEL maintainer="Paul Dziemiela <Paul.Dziemiela@erg.com>"

ARG ARG_JUPYTER_TOKEN
ENV JUPYTER_TOKEN=$ARG_JUPYTER_TOKEN

ENV NB_USER=jovyan
ENV GRANT_SUDO=yes

USER root

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update                                       &&\
    apt-get install -y --no-install-recommends             \
       wget                                                \
       curl                                                \
       less                                                \
       dos2unix                                            \
       openssh-client                                      \
       sshpass                                             \
       parallel                                            \
       unzip                                               \
       zip                                                 \
       git                                                 \
       build-essential                                     \
       vim                                                 \
       epiphany                                            \
       python3                                             \
       python3-pip                                         \
       python3-dev                                         \
       python3-venv                                      &&\
    rm -rf /var/lib/apt/lists/*

RUN echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list &&\
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

# Note the client here needs to stay ahead of the dumps
RUN apt-get update                              &&\
    apt-get install -y --no-install-recommends    \
       postgresql-client-17                     &&\
    apt-get clean                               &&\
    rm -rf /var/lib/apt/lists/*                 &&\
    rm -rf /var/cache/apt/*

RUN python3 -m venv /opt/venv
ENV PATH /opt/venv/bin:${PATH}

RUN useradd -m -s /bin/bash -N -u 1001 ${NB_USER}
RUN mkdir -p /home/${NB_USER}/.ssh
COPY ./jupyter/known_hosts.txt            /home/${NB_USER}/.ssh/known_hosts  
COPY ./jupyter/jupyter_server_config.py   /home/${NB_USER}/.jupyter/jupyter_server_config.py
COPY ./jupyter/notebook.json              /home/${NB_USER}/.jupyter/nbconfig/notebook.json

RUN chmod 0644 /home/${NB_USER}/.ssh/known_hosts

{%- set ghrep = components.cip_jp.github_repo %}
{%- set ghkey = github_repo[ghrep].add_deploy_key %}
{%- if ghkey == true %}
ARG ARG_CIPSRV_DEPLOYKEY
COPY ${ARG_CIPSRV_DEPLOYKEY}.ppk /home/${NB_USER}/.ssh/id_rsa
COPY ${ARG_CIPSRV_DEPLOYKEY}.pub /home/${NB_USER}/.ssh/id_rsa.pub
RUN chmod 0400 /home/${NB_USER}/.ssh/id_rsa                 &&\
    chmod 0400 /home/${NB_USER}/.ssh/id_rsa.pub
{%- endif %}

RUN chown -R ${NB_USER}:users /home/${NB_USER}              &&\
    chown -R ${NB_USER}:users /opt/venv

USER ${NB_USER}

{%- if ghkey == true %}
RUN eval "$(ssh-agent -s)" && ssh-add /home/${NB_USER}/.ssh/id_rsa
{%- endif %}

RUN mkdir -p /home/${NB_USER}/notebooks                     &&\
    mkdir -p /home/${NB_USER}/notebooks/sql                 &&\
    mkdir -p /home/${NB_USER}/notebooks/upload              &&\
    mkdir -p /home/${NB_USER}/loading_dock

RUN python3 -m venv /opt/venv                               &&\
    pip3 install --upgrade numpy

RUN pip3 wheel --wheel-dir /home/$NB_USER/wheels              \
      ipython[all]                                            \
      jupyter                                                 \
      jupyter_server                                          \
      fiona                                                   \
      asyncpg                                                 \
      awscli                                                  \
      folium                                                  \
      geocoder                                                \
      geopandas                                               \
      geopy                                                   \
      h3                                                      \
      ipyleaflet                                              \
      ipywidgets                                              \
      panel                                                   \
      pglast                                                  \
      plprofiler-client                                       \
      psycopg2-binary                                         \
      pyproj                                                  \
      pysal                                                   \
      rtree                                                   \
      shapely                                                 \
      solara                                                  \
      tap.py                                                  \
      voila                                                   \
      wget                                                    \
      openpyxl
      
RUN pip3 install                                              \
      ipython[all]                                            \
      jupyter                                                 \
      jupyter_server                                          \
      fiona                                                   \
      asyncpg                                                 \
      awscli                                                  \
      folium                                                  \
      boto3                                                   \
      geocoder                                                \
      geopandas                                               \
      geopy                                                   \
      gitpython                                               \
      h3                                                      \
      ipyleaflet                                              \
      ipywidgets                                              \
      panel                                                   \
      pglast                                                  \
      plprofiler-client                                       \
      psycopg2-binary                                         \
      pyproj                                                  \
      pysal                                                   \
      rtree                                                   \
      shapely                                                 \
      solara                                                  \
      tap.py                                                  \
      voila                                                   \
      wget                                                    \
      openpyxl

RUN pip3 install jupyterlab

COPY ./jupyter/notebooks /home/${NB_USER}/notebooks

USER root
RUN chown -R ${NB_USER}:users /home/${NB_USER}
USER ${NB_USER}

EXPOSE 8888

CMD ["sh", "-c", "jupyter notebook --port=8888 --no-browser --ip=* --notebook-dir=/home/${NB_USER}/notebooks"]
